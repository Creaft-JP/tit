# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
builds:
  - env:
      - PATH=/llvm-mingw/bin:{{ .Env.PATH }}
      - CGO_ENABLED=1
      - >-
        CC=
        {{- if eq .Arch "amd64" }}
          {{- if eq .Os "windows" }}x86_64-w64-mingw32-gcc
          {{- else if eq .Os "darwin" }}o64-clang
          {{- else }}x86_64-linux-gnu-gcc{{ end }}
        {{- else }}
          {{- if eq .Os "windows" }}aarch64-w64-mingw32-gcc
          {{- else if eq .Os "darwin" }}oa64-clang
          {{- else }}aarch64-linux-gnu-gcc{{ end }}
        {{ end }}
    goarch:
      - amd64
      - arm64
    goos:
      - windows
      - darwin
      - linux

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of uname.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
    - goos: windows
      format: zip
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ incpatch .Version }}-next"
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'

brews:
  - repository:
      owner: Creaft-JP
      name: homebrew-tap
      token: "{{ .Env.TAKECHAN_ACCESS_TOKEN }}"
    description: a Git-Like CLI creating tutorials

# The lines beneath this are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
