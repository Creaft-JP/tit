// Code generated by ent, DO NOT EDIT.

package ent

import (
	"github.com/Creaft-JP/tit/db/local/ent/remote"
	"github.com/Creaft-JP/tit/db/local/ent/schema"
	"github.com/Creaft-JP/tit/db/local/ent/stagedfile"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	remoteFields := schema.Remote{}.Fields()
	_ = remoteFields
	// remoteDescName is the schema descriptor for name field.
	remoteDescName := remoteFields[0].Descriptor()
	// remote.NameValidator is a validator for the "name" field. It is called by the builders before save.
	remote.NameValidator = remoteDescName.Validators[0].(func(string) error)
	// remoteDescURL is the schema descriptor for url field.
	remoteDescURL := remoteFields[1].Descriptor()
	// remote.URLValidator is a validator for the "url" field. It is called by the builders before save.
	remote.URLValidator = remoteDescURL.Validators[0].(func(string) error)
	stagedfileFields := schema.StagedFile{}.Fields()
	_ = stagedfileFields
	// stagedfileDescPath is the schema descriptor for path field.
	stagedfileDescPath := stagedfileFields[0].Descriptor()
	// stagedfile.PathValidator is a validator for the "path" field. It is called by the builders before save.
	stagedfile.PathValidator = stagedfileDescPath.Validators[0].(func(string) error)
	// stagedfileDescContent is the schema descriptor for content field.
	stagedfileDescContent := stagedfileFields[1].Descriptor()
	// stagedfile.ContentValidator is a validator for the "content" field. It is called by the builders before save.
	stagedfile.ContentValidator = stagedfileDescContent.Validators[0].(func(string) error)
}
