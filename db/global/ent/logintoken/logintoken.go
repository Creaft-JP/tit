// Code generated by ent, DO NOT EDIT.

package logintoken

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the logintoken type in the database.
	Label = "login_token"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldSignInUserSlug holds the string denoting the sign_in_user_slug field in the database.
	FieldSignInUserSlug = "sign_in_user_slug"
	// FieldCliLoginToken holds the string denoting the cli_login_token field in the database.
	FieldCliLoginToken = "cli_login_token"
	// Table holds the table name of the logintoken in the database.
	Table = "login_tokens"
)

// Columns holds all SQL columns for logintoken fields.
var Columns = []string{
	FieldID,
	FieldSignInUserSlug,
	FieldCliLoginToken,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// SignInUserSlugValidator is a validator for the "sign_in_user_slug" field. It is called by the builders before save.
	SignInUserSlugValidator func(string) error
	// CliLoginTokenValidator is a validator for the "cli_login_token" field. It is called by the builders before save.
	CliLoginTokenValidator func(string) error
)

// OrderOption defines the ordering options for the LoginToken queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// BySignInUserSlug orders the results by the sign_in_user_slug field.
func BySignInUserSlug(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSignInUserSlug, opts...).ToFunc()
}

// ByCliLoginToken orders the results by the cli_login_token field.
func ByCliLoginToken(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCliLoginToken, opts...).ToFunc()
}
